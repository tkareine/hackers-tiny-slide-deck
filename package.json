{
  "name": "hackers-tiny-slide-deck",
  "version": "0.4.1-dev",
  "license": "MIT",
  "description": "Turn a Markdown document into a slide deck quickly.",
  "author": "Tuomas Kareinen <tkareine@gmail.com>",
  "keywords": [
    "markdown",
    "slide-deck",
    "slideshow-maker"
  ],
  "homepage": "https://github.com/tkareine/hackers-tiny-slide-deck",
  "bugs": "https://github.com/tkareine/hackers-tiny-slide-deck/issues",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/tkareine/hackers-tiny-slide-deck.git"
  },
  "files": [
    "CHANGELOG.md",
    "LICENSE.txt",
    "README.md",
    "build/htsd.min.js",
    "build/htsd.min.js.map",
    "package.json"
  ],
  "browser": "build/htsd.min.js",
  "engines": {
    "node": ">= 18"
  },
  "scripts": {
    "clean": "rm -fr build hackers-tiny-slide-deck-*.tgz test/downloads test/screenshots test/videos",
    "clobber": "npm run clean && rm -fr node_modules",
    "example:build": "mkdir -p build && marked --gfm --input example.md > build/example.html",
    "example:mkBranch": "npm run clean && NODE_ENV=production npm run lib:build && npm run example:build && git add -f build && git update-ref refs/heads/gh-pages \"$(git commit-tree -m 'Generated example' \"$(git write-tree --prefix=build/)\")\" && git reset",
    "example:pushBranch": "git push -f origin gh-pages",
    "example:publish": "npm run example:mkBranch && npm run example:pushBranch",
    "lib:build": "mkdir -p build && webpack",
    "lib:diffBuild": "bash -c 'diff -u -- <(git show origin/gh-pages:htsd.min.js | prettier --parser babel) <(cat build/htsd.min.js | prettier --parser babel)'",
    "lib:serve": "mkdir -p build && webpack serve",
    "lint": "prettier --check '*.{mjs,js}' '{src,test}/**/*.{mjs,js}'",
    "prepack": "NODE_ENV=production npm run lib:build",
    "test": "npm run lint && npm run test:unit && npm run test:integration:ci && NODE_ENV=production npm run lib:build",
    "test:integration:build": "mkdir -p build/test && for f in test/fixture/*.md; do marked -i \"$f\" > \"build/test/$(basename -s .md \"$f\").html\"; done",
    "test:integration:ci": "npm run test:integration:build && NODE_ENV=production start-server-and-test lib:serve 'http-get://127.0.0.1:8080' test:integration:run",
    "test:integration:open": "cypress open",
    "test:integration:run": "cypress run",
    "test:unit": "ava 'src/**/*.test.mjs'"
  },
  "devDependencies": {
    "@babel/core": "^7.12.0",
    "@babel/preset-env": "^7.12.0",
    "ava": "^6.0.1",
    "babel-loader": "^9.1.2",
    "css-loader": "^6.4.0",
    "cypress": "^13.6.2",
    "marked": "^11.1.1",
    "prettier": "^3.1.1",
    "start-server-and-test": "^2.0.0",
    "style-loader": "^3.3.1",
    "terser-webpack-plugin": "^5.0.0",
    "webpack": "^5.1.2",
    "webpack-cli": "^5.0.1",
    "webpack-dev-server": "^4.3.1"
  }
}
